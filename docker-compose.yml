version: '3.8'

services:
  collector:
    build: ./collector
    container_name: collector
    network_mode: "host"
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      # These paths are now dynamically loaded from your .env file
      - ${DATA_PATH:-./clean_data}:/data
      - ${SSH_CONFIG_PATH:-~/.ssh/config}:/root/.ssh/config:ro

  exporter:
    build: ./exporter
    container_name: exporter
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    volumes:
      # This path is also loaded from the .env file to ensure consistency
      - ${DATA_PATH:-./clean_data}:/data:ro
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=30d'
    networks:
      - monitoring
    depends_on:
      - exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      # This volume is for persistent dashboards, data sources, etc.
      - grafana-data:/var/lib/grafana
      # This new volume mounts your dashboard JSON files into Grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      # This new volume mounts the provisioning config file
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - monitoring
    depends_on:
      - prometheus

networks:
  monitoring:

volumes:
  prometheus-data:
  grafana-data:
